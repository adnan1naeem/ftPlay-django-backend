# Generated by Django 4.2.23 on 2025-06-17 11:15

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("images", models.JSONField()),
                ("time", models.DateTimeField()),
                ("date", models.DateField()),
                ("region", models.CharField(default="UTC", max_length=50)),
                ("venue_details", models.JSONField()),
                ("location", models.JSONField(blank=True, null=True)),
                ("duration", models.IntegerField(blank=True, null=True)),
                ("number_of_participants", models.IntegerField()),
                ("player_fees", models.DecimalField(decimal_places=2, max_digits=10)),
                ("game_rules", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("UPCOMING", "Upcoming"),
                            ("ONGOING", "Ongoing"),
                            ("COMPLETED", "Completed"),
                            ("CANCELED", "Canceled"),
                        ],
                        default="UPCOMING",
                        max_length=10,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("PRIVATE", "Private"), ("PUBLIC", "Public")],
                        default="PRIVATE",
                        max_length=10,
                    ),
                ),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("OTHER", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "reset_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("reset_token_expiry", models.DateTimeField(blank=True, null=True)),
                ("fcm_token", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="team_members",
                        to="main.player",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlayerDetails",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("age_group", models.CharField(blank=True, max_length=50, null=True)),
                ("play_position", models.JSONField(blank=True, null=True)),
                ("trait_that_suits", models.JSONField(blank=True, null=True)),
                ("skill_level", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "often_play_football",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("rank_technique_score", models.IntegerField(default=0)),
                ("rank_physical_score", models.IntegerField(default=0)),
                ("rank_defense_score", models.IntegerField(default=0)),
                ("rank_attack_score", models.IntegerField(default=0)),
                ("video_link", models.CharField(blank=True, max_length=255, null=True)),
                ("video_key", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("wins", models.IntegerField(default=0)),
                ("draw", models.IntegerField(default=0)),
                ("lose", models.IntegerField(default=0)),
                ("goal", models.IntegerField(default=0)),
                ("assists", models.IntegerField(default=0)),
                (
                    "player",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="details",
                        to="main.player",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Organizer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "reset_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MALE", "Male"),
                            ("FEMALE", "Female"),
                            ("OTHER", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("reset_token_expiry", models.DateTimeField(blank=True, null=True)),
                ("fcm_token", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organizer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("GAME_CREATED", "Game Created"),
                            ("GAME_JOINED", "Game Joined"),
                            ("GAME_COMMENT", "Game Comment"),
                            ("GAME_RATING", "Game Rating"),
                            ("PAYMENT_RECEIVED", "Payment Received"),
                            ("PAYMENT_COMPLETED", "Payment Completed"),
                            ("RATING_VERIFICATION", "Rating Verification"),
                            ("NEW_PARTICIPANT", "New Participant"),
                            ("GAME_STARTING_SOON", "Game Starting Soon"),
                            ("GAME_COMPLETED", "Game Completed"),
                            ("PLAYER_RATED_GAME", "Player Rated Game"),
                            ("GAME_DELETED", "Game Deleted"),
                            ("GAME_CANCELED", "Game Canceled"),
                            ("NEW_COMMENT", "New Comment"),
                            ("RATING_SUBMITTED", "Rating Submitted"),
                            ("RATING_VERIFIED", "Rating Verified"),
                            ("PAYMENT_REFUNDED", "Payment Refunded"),
                        ],
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                (
                    "actor_organizer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actor_notifications",
                        to="main.organizer",
                    ),
                ),
                (
                    "actor_player",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actor_notifications",
                        to="main.player",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="main.game",
                    ),
                ),
                (
                    "recipient_organizer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="main.organizer",
                    ),
                ),
                (
                    "recipient_player",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="main.player",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameRating",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "result",
                    models.CharField(
                        choices=[("WIN", "Win"), ("LOSE", "Lose"), ("DRAW", "Draw")],
                        max_length=10,
                    ),
                ),
                ("goals", models.IntegerField(default=0)),
                ("assists", models.IntegerField(default=0)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("VERIFIED", "Verified")],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="main.game",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_ratings",
                        to="main.player",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GamePayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_payment_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="main.game",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_payments",
                        to="main.player",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content", models.TextField()),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="main.game",
                    ),
                ),
                (
                    "organizer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main.organizer",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="game_comments",
                        to="main.player",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="game",
            name="organizer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="games",
                to="main.organizer",
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="participants",
            field=models.ManyToManyField(related_name="games", to="main.player"),
        ),
    ]
